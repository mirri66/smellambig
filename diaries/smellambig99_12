{Warning: The RandStream.setDefaultStream static method will be removed in a future release.
Use RandStream.setGlobalStream instead.} 
{> In <a href="matlab: opentoline('C:\Program Files\MATLAB\R2012a\toolbox\matlab\randfun\@RandStream\RandStream.m',456,1)">RandStream.RandStream>RandStream.setDefaultStream at 456</a>
  In <a href="matlab: opentoline('C:\Users\experimenter\Dropbox\odor530\Stanford-PsychToolBox\functions\exptSetup.m',8,1)">exptSetup at 8</a>
  In <a href="matlab: opentoline('C:\Users\experimenter\Dropbox\odor530\smellambig\smellambig.m',46,1)">smellambig at 46</a>} 
PTB-INFO: Multi-display setup in explicit multi-display mode detected. Using the following mapping:
PTB-INFO: Screen 0 corresponds to the full Windows desktop area. Useful for stereo presentations in stereomode=4 ...
PTB-INFO: Screen 1 corresponds to the display area of the monitor with the Windows-internal name \\.\DISPLAY1 ...
PTB-INFO: Screen 2 corresponds to the display area of the monitor with the Windows-internal name \\.\DISPLAY2 ...
PTB-WARNING: Screens 1 and 2 do have non-equal width and height. This will probably cause wrong behaviour
PTB-WARNING: when trying to open a fullscreen window on Screen 0 that is supposed to fully cover displays 1 and 2.
PTB-WARNING: In that case, either change your screen settings to matching size and refresh rate in the display control
PTB-WARNING: panel and retry after a 'clear all', or manually specify a [rect] parameter for the window in the
PTB-WARNING: Screen('OpenWindow', 0, [color], [rect]); command to manually enforce creation of a proper onscreen window.



PTB-INFO: This is Psychtoolbox-3 for Microsoft Windows, under Matlab (Version 3.0.9 - Build date: Apr  2 2012).
PTB-INFO: Type 'PsychtoolboxVersion' for more detailed version information.
PTB-INFO: Most parts of the Psychtoolbox distribution are licensed to you under terms of the MIT License, with
PTB-INFO: some restrictions. See file 'License.txt' in the Psychtoolbox root folder for the exact licensing conditions.

PTB-INFO: Will disable DWM because a regular fullscreen onscreen window is opened -> We want best timing and performance.
PTB-INFO: The detected endline of the vertical blank interval is equal or lower than the startline. This indicates
PTB-INFO: that i couldn't detect the duration of the vertical blank interval and won't be able to correct timestamps
PTB-INFO: for it. This will introduce a very small and constant offset (typically << 1 msec). Read 'help BeampositionQueries'
PTB-INFO: for how to correct this, should you really require that last few microseconds of precision.
PTB-INFO: Btw. this can also mean that your systems beamposition queries are slightly broken. It may help timing precision to
PTB-INFO: enable the beamposition workaround, as explained in 'help ConserveVRAM', section 'kPsychUseBeampositionQueryWorkaround'.


PTB-INFO: OpenGL-Renderer is NVIDIA Corporation :: Quadro 400/PCIe/SSE2 :: 3.3.0
PTB-INFO: VBL startline = 1200 , VBL Endline = 1199
PTB-INFO: Measured monitor refresh interval from beamposition = 16.681145 ms [59.947922 Hz].
PTB-INFO: Will use beamposition query for accurate Flip time stamping.
PTB-INFO: Measured monitor refresh interval from VBLsync = 16.677081 ms [59.962531 Hz]. (50 valid samples taken, stddev=0.142362 ms.)
PTB-INFO: Reported monitor refresh interval from operating system = 16.949153 ms [59.000000 Hz].
PTB-INFO: Small deviations between reported values are normal and no reason to worry.
PTB-INFO: Support for fast OffscreenWindows enabled.

opt1type: 1, opt1val1: 12, opt1val2: 0, opt1prob: 1
opt2type: 2, opt2val1: 8, opt2val2: 20, opt2prob: 0.5
choice onset: 7.71955 
{Operation terminated by user during <a href="matlab:helpUtils.errorDocCallback('GetKey', 'C:\Users\experimenter\Dropbox\odor530\GT-PTB\GetKey.m', 68)" style="font-weight:bold">GetKey</a> (<a href="matlab: opentoline('C:\Users\experimenter\Dropbox\odor530\GT-PTB\GetKey.m',68,0)">line 68</a>)

In <a href="matlab:helpUtils.errorDocCallback('HuettelRisk>HuettelTrial', 'C:\Users\experimenter\Dropbox\odor530\Stanford-PsychToolBox\functions\HuettelRisk.m', 304)" style="font-weight:bold">HuettelRisk>HuettelTrial</a> (<a href="matlab: opentoline('C:\Users\experimenter\Dropbox\odor530\Stanford-PsychToolBox\functions\HuettelRisk.m',304,0)">line 304</a>)
[testTrials.key testTrials.RT] = GetKey({'1!','4$'},[],[],-3);

In <a href="matlab:helpUtils.errorDocCallback('HuettelRisk', 'C:\Users\experimenter\Dropbox\odor530\Stanford-PsychToolBox\functions\HuettelRisk.m', 167)" style="font-weight:bold">HuettelRisk</a> (<a href="matlab: opentoline('C:\Users\experimenter\Dropbox\odor530\Stanford-PsychToolBox\functions\HuettelRisk.m',167,0)">line 167</a>)
    pracdata12 = HuettelTrial(c,xx,opt1type, opt1val1,opt1val2,opt1prob,opt2type,
    opt2val1,opt2val2,opt2prob);

In <a href="matlab:helpUtils.errorDocCallback('smellambig', 'C:\Users\experimenter\Dropbox\odor530\smellambig\smellambig.m', 57)" style="font-weight:bold">smellambig</a> (<a href="matlab: opentoline('C:\Users\experimenter\Dropbox\odor530\smellambig\smellambig.m',57,0)">line 57</a>)
[HuettelData] = HuettelRisk(c);
} 
sca
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap space
	at java.awt.image.DataBufferInt.<init>(Unknown Source)
	at java.awt.image.Raster.createPackedRaster(Unknown Source)
	at java.awt.image.DirectColorModel.createCompatibleWritableRaster(Unknown Source)
	at sun.awt.image.SunVolatileImage.getBackupImage(Unknown Source)
	at sun.awt.image.VolatileSurfaceManager.getBackupSurface(Unknown Source)
	at sun.awt.image.VolatileSurfaceManager.initialize(Unknown Source)
	at sun.awt.image.SunVolatileImage.<init>(Unknown Source)
	at sun.awt.image.SunVolatileImage.<init>(Unknown Source)
	at java.awt.GraphicsConfiguration.createCompatibleVolatileImage(Unknown Source)
	at java.awt.GraphicsConfiguration.createCompatibleVolatileImage(Unknown Source)
	at javax.swing.RepaintManager.getVolatileOffscreenBuffer(Unknown Source)
	at javax.swing.RepaintManager$PaintManager.paint(Unknown Source)
	at javax.swing.RepaintManager.paint(Unknown Source)
	at javax.swing.JComponent.paint(Unknown Source)
	at java.awt.GraphicsCallback$PaintCallback.run(Unknown Source)
	at sun.awt.SunGraphicsCallback.runOneComponent(Unknown Source)
	at sun.awt.SunGraphicsCallback.runComponents(Unknown Source)
	at java.awt.Container.paint(Unknown Source)
	at javax.swing.RepaintManager.paintDirtyRegions(Unknown Source)
	at javax.swing.RepaintManager.paintDirtyRegions(Unknown Source)
	at javax.swing.RepaintManager.seqPaintDirtyRegions(Unknown Source)
	at javax.swing.SystemEventQueueUtilities$ComponentWorkRequest.run(Unknown Source)
	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap space
	at java.awt.image.DataBufferInt.<init>(Unknown Source)
	at java.awt.image.Raster.createPackedRaster(Unknown Source)
	at java.awt.image.DirectColorModel.createCompatibleWritableRaster(Unknown Source)
	at sun.awt.image.SunVolatileImage.getBackupImage(Unknown Source)
	at sun.awt.image.VolatileSurfaceManager.getBackupSurface(Unknown Source)
	at sun.awt.image.VolatileSurfaceManager.initialize(Unknown Source)
	at sun.awt.image.SunVolatileImage.<init>(Unknown Source)
	at sun.awt.image.SunVolatileImage.<init>(Unknown Source)
	at java.awt.GraphicsConfiguration.createCompatibleVolatileImage(Unknown Source)
	at java.awt.GraphicsConfiguration.createCompatibleVolatileImage(Unknown Source)
	at javax.swing.RepaintManager.getVolatileOffscreenBuffer(Unknown Source)
	at javax.swing.RepaintManager$PaintManager.paint(Unknown Source)
	at javax.swing.RepaintManager.paint(Unknown Source)
	at javax.swing.JComponent.paint(Unknown Source)
	at java.awt.GraphicsCallback$PaintCallback.run(Unknown Source)
	at sun.awt.SunGraphicsCallback.runOneComponent(Unknown Source)
	at sun.awt.SunGraphicsCallback.runComponents(Unknown Source)
	at java.awt.Container.paint(Unknown Source)
	at javax.swing.RepaintManager.paintDirtyRegions(Unknown Source)
	at javax.swing.RepaintManager.paintDirtyRegions(Unknown Source)
	at javax.swing.RepaintManager.seqPaintDirtyRegions(Unknown Source)
	at javax.swing.SystemEventQueueUtilities$ComponentWorkRequest.run(Unknown Source)
	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap space
	at java.awt.image.DataBufferInt.<init>(Unknown Source)
	at java.awt.image.Raster.createPackedRaster(Unknown Source)
	at java.awt.image.DirectColorModel.createCompatibleWritableRaster(Unknown Source)
	at sun.awt.image.SunVolatileImage.getBackupImage(Unknown Source)
	at sun.awt.image.VolatileSurfaceManager.getBackupSurface(Unknown Source)
	at sun.awt.image.VolatileSurfaceManager.initialize(Unknown Source)
	at sun.awt.image.SunVolatileImage.<init>(Unknown Source)
	at sun.awt.image.SunVolatileImage.<init>(Unknown Source)
	at java.awt.GraphicsConfiguration.createCompatibleVolatileImage(Unknown Source)
	at java.awt.GraphicsConfiguration.createCompatibleVolatileImage(Unknown Source)
	at javax.swing.RepaintManager.getVolatileOffscreenBuffer(Unknown Source)
	at javax.swing.RepaintManager$PaintManager.paint(Unknown Source)
	at javax.swing.RepaintManager.paint(Unknown Source)
	at javax.swing.JComponent.paint(Unknown Source)
	at java.awt.GraphicsCallback$PaintCallback.run(Unknown Source)
	at sun.awt.SunGraphicsCallback.runOneComponent(Unknown Source)
	at sun.awt.SunGraphicsCallback.runComponents(Unknown Source)
	at java.awt.Container.paint(Unknown Source)
	at javax.swing.RepaintManager.paintDirtyRegions(Unknown Source)
	at javax.swing.RepaintManager.paintDirtyRegions(Unknown Source)
	at javax.swing.RepaintManager.seqPaintDirtyRegions(Unknown Source)
	at javax.swing.SystemEventQueueUtilities$ComponentWorkRequest.run(Unknown Source)
	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap space
	at java.awt.image.DataBufferInt.<init>(Unknown Source)
	at java.awt.image.Raster.createPackedRaster(Unknown Source)
	at java.awt.image.DirectColorModel.createCompatibleWritableRaster(Unknown Source)
	at sun.awt.image.SunVolatileImage.getBackupImage(Unknown Source)
	at sun.awt.image.VolatileSurfaceManager.getBackupSurface(Unknown Source)
	at sun.awt.image.VolatileSurfaceManager.initialize(Unknown Source)
	at sun.awt.image.SunVolatileImage.<init>(Unknown Source)
	at sun.awt.image.SunVolatileImage.<init>(Unknown Source)
	at java.awt.GraphicsConfiguration.createCompatibleVolatileImage(Unknown Source)
	at java.awt.GraphicsConfiguration.createCompatibleVolatileImage(Unknown Source)
	at javax.swing.RepaintManager.getVolatileOffscreenBuffer(Unknown Source)
	at javax.swing.RepaintManager$PaintManager.paint(Unknown Source)
	at javax.swing.RepaintManager.paint(Unknown Source)
	at javax.swing.JComponent._paintImmediately(Unknown Source)
	at javax.swing.JComponent.paintImmediately(Unknown Source)
	at javax.swing.RepaintManager.paintDirtyRegions(Unknown Source)
	at javax.swing.RepaintManager.paintDirtyRegions(Unknown Source)
	at javax.swing.RepaintManager.seqPaintDirtyRegions(Unknown Source)
	at javax.swing.SystemEventQueueUtilities$ComponentWorkRequest.run(Unknown Source)
	at java.awt.event.InvocationEvent.dispatch(Unknown Source)
	at java.awt.EventQueue.dispatchEvent(Unknown Source)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
	at java.awt.EventDispatchThread.run(Unknown Source)
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap space
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap space
Exception in thread "AWT-EventQueue-0" java.lang.OutOfMemoryError: Java heap space
